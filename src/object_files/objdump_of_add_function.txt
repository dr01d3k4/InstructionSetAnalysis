ben@ben-XPS-L701X:~/Documents/InstructionSetAnalysis/src/object_files$ objdump -d -M intel add_function.o 
add_function.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0: 55                    push   rbp
   1: 48 89 e5              mov    rbp,rsp
   4: 48 83 ec 10           sub    rsp,0x10
   8: bf 00 00 00 00        mov    edi,0x0
   d: e8 00 00 00 00        call   12 <main+0x12>
  12: c7 45 f4 05 00 00 00  mov    DWORD PTR [rbp-0xc],0x5
  19: c7 45 f8 07 00 00 00  mov    DWORD PTR [rbp-0x8],0x7
  20: 8b 55 f8              mov    edx,DWORD PTR [rbp-0x8]
  23: 8b 45 f4              mov    eax,DWORD PTR [rbp-0xc]
  26: 89 d6                 mov    esi,edx
  28: 89 c7                 mov    edi,eax
  2a: e8 00 00 00 00        call   2f <main+0x2f>
  2f: 89 45 fc              mov    DWORD PTR [rbp-0x4],eax
  32: 8b 45 fc              mov    eax,DWORD PTR [rbp-0x4]
  35: 89 c6                 mov    esi,eax
  37: bf 00 00 00 00        mov    edi,0x0
  3c: b8 00 00 00 00        mov    eax,0x0
  41: e8 00 00 00 00        call   46 <main+0x46>
  46: b8 00 00 00 00        mov    eax,0x0
  4b: c9                    leave  
  4c: c3                    ret    

000000000000004d <add>:
  4d: 55                    push   rbp
  4e: 48 89 e5              mov    rbp,rsp
  51: 89 7d fc              mov    DWORD PTR [rbp-0x4],edi
  54: 89 75 f8              mov    DWORD PTR [rbp-0x8],esi
  57: 8b 45 f8              mov    eax,DWORD PTR [rbp-0x8]
  5a: 8b 55 fc              mov    edx,DWORD PTR [rbp-0x4]
  5d: 01 d0                 add    eax,edx
  5f: 5d                    pop    rbp
  60: c3                    ret    








Looking at linked *.out file:
ben@ben-XPS-L701X:~/Documents/InstructionSetAnalysis/c/AddFunction$ objdump -d -M intel a.out 

a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000400418 <_init>:
  400418: 48 83 ec 08           sub    rsp,0x8
  40041c: 48 8b 05 d5 0b 20 00  mov    rax,QWORD PTR [rip+0x200bd5]        # 600ff8 <_DYNAMIC+0x1d0>
  400423: 48 85 c0              test   rax,rax
  400426: 74 05                 je     40042d <_init+0x15>
  400428: e8 53 00 00 00        call   400480 <__gmon_start__@plt>
  40042d: 48 83 c4 08           add    rsp,0x8
  400431: c3                    ret    

Disassembly of section .plt:

0000000000400440 <puts@plt-0x10>:
  400440: ff 35 c2 0b 20 00     push   QWORD PTR [rip+0x200bc2]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400446: ff 25 c4 0b 20 00     jmp    QWORD PTR [rip+0x200bc4]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40044c: 0f 1f 40 00           nop    DWORD PTR [rax+0x0]

0000000000400450 <puts@plt>:
  400450: ff 25 c2 0b 20 00     jmp    QWORD PTR [rip+0x200bc2]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400456: 68 00 00 00 00        push   0x0
  40045b: e9 e0 ff ff ff        jmp    400440 <_init+0x28>

0000000000400460 <printf@plt>:
  400460: ff 25 ba 0b 20 00     jmp    QWORD PTR [rip+0x200bba]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400466: 68 01 00 00 00        push   0x1
  40046b: e9 d0 ff ff ff        jmp    400440 <_init+0x28>

0000000000400470 <__libc_start_main@plt>:
  400470: ff 25 b2 0b 20 00     jmp    QWORD PTR [rip+0x200bb2]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400476: 68 02 00 00 00        push   0x2
  40047b: e9 c0 ff ff ff        jmp    400440 <_init+0x28>

0000000000400480 <__gmon_start__@plt>:
  400480: ff 25 aa 0b 20 00     jmp    QWORD PTR [rip+0x200baa]        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400486: 68 03 00 00 00        push   0x3
  40048b: e9 b0 ff ff ff        jmp    400440 <_init+0x28>

Disassembly of section .text:

0000000000400490 <_start>:
  400490: 31 ed                 xor    ebp,ebp
  400492: 49 89 d1              mov    r9,rdx
  400495: 5e                    pop    rsi
  400496: 48 89 e2              mov    rdx,rsp
  400499: 48 83 e4 f0           and    rsp,0xfffffffffffffff0
  40049d: 50                    push   rax
  40049e: 54                    push   rsp
  40049f: 49 c7 c0 50 06 40 00  mov    r8,0x400650
  4004a6: 48 c7 c1 e0 05 40 00  mov    rcx,0x4005e0
  4004ad: 48 c7 c7 7d 05 40 00  mov    rdi,0x40057d
  4004b4: e8 b7 ff ff ff        call   400470 <__libc_start_main@plt>
  4004b9: f4                    hlt    
  4004ba: 66 0f 1f 44 00 00     nop    WORD PTR [rax+rax*1+0x0]

00000000004004c0 <deregister_tm_clones>:
  4004c0: b8 4f 10 60 00        mov    eax,0x60104f
  4004c5: 55                    push   rbp
  4004c6: 48 2d 48 10 60 00     sub    rax,0x601048
  4004cc: 48 83 f8 0e           cmp    rax,0xe
  4004d0: 48 89 e5              mov    rbp,rsp
  4004d3: 77 02                 ja     4004d7 <deregister_tm_clones+0x17>
  4004d5: 5d                    pop    rbp
  4004d6: c3                    ret    
  4004d7: b8 00 00 00 00        mov    eax,0x0
  4004dc: 48 85 c0              test   rax,rax
  4004df: 74 f4                 je     4004d5 <deregister_tm_clones+0x15>
  4004e1: 5d                    pop    rbp
  4004e2: bf 48 10 60 00        mov    edi,0x601048
  4004e7: ff e0                 jmp    rax
  4004e9: 0f 1f 80 00 00 00 00  nop    DWORD PTR [rax+0x0]

00000000004004f0 <register_tm_clones>:
  4004f0: b8 48 10 60 00        mov    eax,0x601048
  4004f5: 55                    push   rbp
  4004f6: 48 2d 48 10 60 00     sub    rax,0x601048
  4004fc: 48 c1 f8 03           sar    rax,0x3
  400500: 48 89 e5              mov    rbp,rsp
  400503: 48 89 c2              mov    rdx,rax
  400506: 48 c1 ea 3f           shr    rdx,0x3f
  40050a: 48 01 d0              add    rax,rdx
  40050d: 48 d1 f8              sar    rax,1
  400510: 75 02                 jne    400514 <register_tm_clones+0x24>
  400512: 5d                    pop    rbp
  400513: c3                    ret    
  400514: ba 00 00 00 00        mov    edx,0x0
  400519: 48 85 d2              test   rdx,rdx
  40051c: 74 f4                 je     400512 <register_tm_clones+0x22>
  40051e: 5d                    pop    rbp
  40051f: 48 89 c6              mov    rsi,rax
  400522: bf 48 10 60 00        mov    edi,0x601048
  400527: ff e2                 jmp    rdx
  400529: 0f 1f 80 00 00 00 00  nop    DWORD PTR [rax+0x0]

0000000000400530 <__do_global_dtors_aux>:
  400530: 80 3d 11 0b 20 00 00  cmp    BYTE PTR [rip+0x200b11],0x0        # 601048 <__TMC_END__>
  400537: 75 11                 jne    40054a <__do_global_dtors_aux+0x1a>
  400539: 55                    push   rbp
  40053a: 48 89 e5              mov    rbp,rsp
  40053d: e8 7e ff ff ff        call   4004c0 <deregister_tm_clones>
  400542: 5d                    pop    rbp
  400543: c6 05 fe 0a 20 00 01  mov    BYTE PTR [rip+0x200afe],0x1        # 601048 <__TMC_END__>
  40054a: f3 c3                 repz ret 
  40054c: 0f 1f 40 00           nop    DWORD PTR [rax+0x0]

0000000000400550 <frame_dummy>:
  400550: 48 83 3d c8 08 20 00  cmp    QWORD PTR [rip+0x2008c8],0x0        # 600e20 <__JCR_END__>
  400557: 00 
  400558: 74 1e                 je     400578 <frame_dummy+0x28>
  40055a: b8 00 00 00 00        mov    eax,0x0
  40055f: 48 85 c0              test   rax,rax
  400562: 74 14                 je     400578 <frame_dummy+0x28>
  400564: 55                    push   rbp
  400565: bf 20 0e 60 00        mov    edi,0x600e20
  40056a: 48 89 e5              mov    rbp,rsp
  40056d: ff d0                 call   rax
  40056f: 5d                    pop    rbp
  400570: e9 7b ff ff ff        jmp    4004f0 <register_tm_clones>
  400575: 0f 1f 00              nop    DWORD PTR [rax]
  400578: e9 73 ff ff ff        jmp    4004f0 <register_tm_clones>

000000000040057d <main>:
  40057d: 55                    push   rbp
  40057e: 48 89 e5              mov    rbp,rsp
  400581: 48 83 ec 10           sub    rsp,0x10
  400585: bf 64 06 40 00        mov    edi,0x400664
  40058a: e8 c1 fe ff ff        call   400450 <puts@plt>
  40058f: c7 45 f4 05 00 00 00  mov    DWORD PTR [rbp-0xc],0x5
  400596: c7 45 f8 07 00 00 00  mov    DWORD PTR [rbp-0x8],0x7
  40059d: 8b 55 f8              mov    edx,DWORD PTR [rbp-0x8]
  4005a0: 8b 45 f4              mov    eax,DWORD PTR [rbp-0xc]
  4005a3: 89 d6                 mov    esi,edx
  4005a5: 89 c7                 mov    edi,eax
  4005a7: e8 1e 00 00 00        call   4005ca <add>
  4005ac: 89 45 fc              mov    DWORD PTR [rbp-0x4],eax
  4005af: 8b 45 fc              mov    eax,DWORD PTR [rbp-0x4]
  4005b2: 89 c6                 mov    esi,eax
  4005b4: bf 71 06 40 00        mov    edi,0x400671
  4005b9: b8 00 00 00 00        mov    eax,0x0
  4005be: e8 9d fe ff ff        call   400460 <printf@plt>
  4005c3: b8 00 00 00 00        mov    eax,0x0
  4005c8: c9                    leave  
  4005c9: c3                    ret    

00000000004005ca <add>:
  4005ca: 55                    push   rbp
  4005cb: 48 89 e5              mov    rbp,rsp
  4005ce: 89 7d fc              mov    DWORD PTR [rbp-0x4],edi
  4005d1: 89 75 f8              mov    DWORD PTR [rbp-0x8],esi
  4005d4: 8b 45 f8              mov    eax,DWORD PTR [rbp-0x8]
  4005d7: 8b 55 fc              mov    edx,DWORD PTR [rbp-0x4]
  4005da: 01 d0                 add    eax,edx
  4005dc: 5d                    pop    rbp
  4005dd: c3                    ret    
  4005de: 66 90                 xchg   ax,ax

00000000004005e0 <__libc_csu_init>:
  4005e0: 41 57                 push   r15
  4005e2: 41 89 ff              mov    r15d,edi
  4005e5: 41 56                 push   r14
  4005e7: 49 89 f6              mov    r14,rsi
  4005ea: 41 55                 push   r13
  4005ec: 49 89 d5              mov    r13,rdx
  4005ef: 41 54                 push   r12
  4005f1: 4c 8d 25 18 08 20 00  lea    r12,[rip+0x200818]        # 600e10 <__frame_dummy_init_array_entry>
  4005f8: 55                    push   rbp
  4005f9: 48 8d 2d 18 08 20 00  lea    rbp,[rip+0x200818]        # 600e18 <__init_array_end>
  400600: 53                    push   rbx
  400601: 4c 29 e5              sub    rbp,r12
  400604: 31 db                 xor    ebx,ebx
  400606: 48 c1 fd 03           sar    rbp,0x3
  40060a: 48 83 ec 08           sub    rsp,0x8
  40060e: e8 05 fe ff ff        call   400418 <_init>
  400613: 48 85 ed              test   rbp,rbp
  400616: 74 1e                 je     400636 <__libc_csu_init+0x56>
  400618: 0f 1f 84 00 00 00 00  nop    DWORD PTR [rax+rax*1+0x0]
  40061f: 00 
  400620: 4c 89 ea              mov    rdx,r13
  400623: 4c 89 f6              mov    rsi,r14
  400626: 44 89 ff              mov    edi,r15d
  400629: 41 ff 14 dc           call   QWORD PTR [r12+rbx*8]
  40062d: 48 83 c3 01           add    rbx,0x1
  400631: 48 39 eb              cmp    rbx,rbp
  400634: 75 ea                 jne    400620 <__libc_csu_init+0x40>
  400636: 48 83 c4 08           add    rsp,0x8
  40063a: 5b                    pop    rbx
  40063b: 5d                    pop    rbp
  40063c: 41 5c                 pop    r12
  40063e: 41 5d                 pop    r13
  400640: 41 5e                 pop    r14
  400642: 41 5f                 pop    r15
  400644: c3                    ret    
  400645: 66 66 2e 0f 1f 84 00  data32 nop WORD PTR cs:[rax+rax*1+0x0]
  40064c: 00 00 00 00 

0000000000400650 <__libc_csu_fini>:
  400650: f3 c3                 repz ret 

Disassembly of section .fini:

0000000000400654 <_fini>:
  400654: 48 83 ec 08           sub    rsp,0x8
  400658: 48 83 c4 08           add    rsp,0x8
  40065c: c3                    ret    











ben@ben-XPS-L701X:~/Documents/CompSciProject/HelloWorld/obj/Debug$ objdump -D main.o

main.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	bf 00 00 00 00       	mov    $0x0,%edi
   d:	e8 00 00 00 00       	callq  12 <main+0x12>
  12:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
  19:	c7 45 f8 07 00 00 00 	movl   $0x7,-0x8(%rbp)
  20:	8b 55 f8             	mov    -0x8(%rbp),%edx
  23:	8b 45 f4             	mov    -0xc(%rbp),%eax
  26:	89 d6                	mov    %edx,%esi
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	callq  2f <main+0x2f>
  2f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  32:	8b 45 fc             	mov    -0x4(%rbp),%eax
  35:	89 c6                	mov    %eax,%esi
  37:	bf 00 00 00 00       	mov    $0x0,%edi
  3c:	b8 00 00 00 00       	mov    $0x0,%eax
  41:	e8 00 00 00 00       	callq  46 <main+0x46>
  46:	b8 00 00 00 00       	mov    $0x0,%eax
  4b:	c9                   	leaveq 
  4c:	c3                   	retq   

000000000000004d <add>:
  4d:	55                   	push   %rbp
  4e:	48 89 e5             	mov    %rsp,%rbp
  51:	89 7d fc             	mov    %edi,-0x4(%rbp)
  54:	89 75 f8             	mov    %esi,-0x8(%rbp)
  57:	8b 45 f8             	mov    -0x8(%rbp),%eax
  5a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  5d:	01 d0                	add    %edx,%eax
  5f:	5d                   	pop    %rbp
  60:	c3                   	retq   

Disassembly of section .rodata:

0000000000000000 <.rodata>:
   0:	48                   	rex.W
   1:	65                   	gs
   2:	6c                   	insb   (%dx),%es:(%rdi)
   3:	6c                   	insb   (%dx),%es:(%rdi)
   4:	6f                   	outsl  %ds:(%rsi),(%dx)
   5:	20 77 6f             	and    %dh,0x6f(%rdi)
   8:	72 6c                	jb     76 <add+0x29>
   a:	64 21 00             	and    %eax,%fs:(%rax)
   d:	25                   	.byte 0x25
   e:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	fa                   	cli    
   1:	00 00                	add    %al,(%rax)
   3:	00 04 00             	add    %al,(%rax,%rax,1)
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	01 00                	add    %eax,(%rax)
	...
  1e:	00 00                	add    %al,(%rax)
  20:	00 61 00             	add    %ah,0x0(%rcx)
	...
  2b:	00 00                	add    %al,(%rax)
  2d:	02 08                	add    (%rax),%cl
  2f:	07                   	(bad)  
  30:	00 00                	add    %al,(%rax)
  32:	00 00                	add    %al,(%rax)
  34:	02 01                	add    (%rcx),%al
  36:	08 00                	or     %al,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	00 02                	add    %al,(%rdx)
  3c:	02 07                	add    (%rdi),%al
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
  42:	02 04 07             	add    (%rdi,%rax,1),%al
  45:	00 00                	add    %al,(%rax)
  47:	00 00                	add    %al,(%rax)
  49:	02 01                	add    (%rcx),%al
  4b:	06                   	(bad)  
  4c:	00 00                	add    %al,(%rax)
  4e:	00 00                	add    %al,(%rax)
  50:	02 02                	add    (%rdx),%al
  52:	05 00 00 00 00       	add    $0x0,%eax
  57:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
  5e:	02 08                	add    (%rax),%cl
  60:	05 00 00 00 00       	add    $0x0,%eax
  65:	02 08                	add    (%rax),%cl
  67:	07                   	(bad)  
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	02 01                	add    (%rcx),%al
  6e:	06                   	(bad)  
  6f:	00 00                	add    %al,(%rax)
  71:	00 00                	add    %al,(%rax)
  73:	02 08                	add    (%rax),%cl
  75:	05 00 00 00 00       	add    $0x0,%eax
  7a:	02 08                	add    (%rax),%cl
  7c:	07                   	(bad)  
  7d:	00 00                	add    %al,(%rax)
  7f:	00 00                	add    %al,(%rax)
  81:	04 00                	add    $0x0,%al
  83:	00 00                	add    %al,(%rax)
  85:	00 01                	add    %al,(%rcx)
  87:	08 57 00             	or     %dl,0x0(%rdi)
	...
  92:	00 00                	add    %al,(%rax)
  94:	4d 00 00             	rex.WRB add %r8b,(%r8)
  97:	00 00                	add    %al,(%rax)
  99:	00 00                	add    %al,(%rax)
  9b:	00 01                	add    %al,(%rcx)
  9d:	9c                   	pushfq 
  9e:	c7 00 00 00 05 78    	movl   $0x78050000,(%rax)
  a4:	00 01                	add    %al,(%rcx)
  a6:	0b 57 00             	or     0x0(%rdi),%edx
  a9:	00 00                	add    %al,(%rax)
  ab:	02 91 64 05 79 00    	add    0x790564(%rcx),%dl
  b1:	01 0c 57             	add    %ecx,(%rdi,%rdx,2)
  b4:	00 00                	add    %al,(%rax)
  b6:	00 02                	add    %al,(%rdx)
  b8:	91                   	xchg   %eax,%ecx
  b9:	68 05 7a 00 01       	pushq  $0x1007a05
  be:	0d 57 00 00 00       	or     $0x57,%eax
  c3:	02 91 6c 00 06 61    	add    0x6106006c(%rcx),%dl
  c9:	64 64 00 01          	fs add %al,%fs:(%rcx)
  cd:	14 57                	adc    $0x57,%al
	...
  d7:	00 00                	add    %al,(%rax)
  d9:	00 14 00             	add    %dl,(%rax,%rax,1)
  dc:	00 00                	add    %al,(%rax)
  de:	00 00                	add    %al,(%rax)
  e0:	00 00                	add    %al,(%rax)
  e2:	01 9c 07 61 00 01 14 	add    %ebx,0x14010061(%rdi,%rax,1)
  e9:	57                   	push   %rdi
  ea:	00 00                	add    %al,(%rax)
  ec:	00 02                	add    %al,(%rdx)
  ee:	91                   	xchg   %eax,%ecx
  ef:	6c                   	insb   (%dx),%es:(%rdi)
  f0:	07                   	(bad)  
  f1:	62                   	(bad)  
  f2:	00 01                	add    %al,(%rcx)
  f4:	14 57                	adc    $0x57,%al
  f6:	00 00                	add    %al,(%rax)
  f8:	00 02                	add    %al,(%rdx)
  fa:	91                   	xchg   %eax,%ecx
  fb:	68                   	.byte 0x68
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <add+0x30b12c9>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 24 00             	add    (%rax,%rax,1),%ah
  16:	0b 0b                	or     (%rbx),%ecx
  18:	3e 0b 03             	or     %ds:(%rbx),%eax
  1b:	0e                   	(bad)  
  1c:	00 00                	add    %al,(%rax)
  1e:	03 24 00             	add    (%rax,%rax,1),%esp
  21:	0b 0b                	or     (%rbx),%ecx
  23:	3e 0b 03             	or     %ds:(%rbx),%eax
  26:	08 00                	or     %al,(%rax)
  28:	00 04 2e             	add    %al,(%rsi,%rbp,1)
  2b:	01 3f                	add    %edi,(%rdi)
  2d:	19 03                	sbb    %eax,(%rbx)
  2f:	0e                   	(bad)  
  30:	3a 0b                	cmp    (%rbx),%cl
  32:	3b 0b                	cmp    (%rbx),%ecx
  34:	49 13 11             	adc    (%r9),%rdx
  37:	01 12                	add    %edx,(%rdx)
  39:	07                   	(bad)  
  3a:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  41:	00 00                	add    %al,(%rax)
  43:	05 34 00 03 08       	add    $0x8030034,%eax
  48:	3a 0b                	cmp    (%rbx),%cl
  4a:	3b 0b                	cmp    (%rbx),%ecx
  4c:	49 13 02             	adc    (%r10),%rax
  4f:	18 00                	sbb    %al,(%rax)
  51:	00 06                	add    %al,(%rsi)
  53:	2e 01 3f             	add    %edi,%cs:(%rdi)
  56:	19 03                	sbb    %eax,(%rbx)
  58:	08 3a                	or     %bh,(%rdx)
  5a:	0b 3b                	or     (%rbx),%edi
  5c:	0b 27                	or     (%rdi),%esp
  5e:	19 49 13             	sbb    %ecx,0x13(%rcx)
  61:	11 01                	adc    %eax,(%rcx)
  63:	12 07                	adc    (%rdi),%al
  65:	40 18 97 42 19 00 00 	sbb    %dl,0x1942(%rdi)
  6c:	07                   	(bad)  
  6d:	05 00 03 08 3a       	add    $0x3a080300,%eax
  72:	0b 3b                	or     (%rbx),%edi
  74:	0b 49 13             	or     0x13(%rcx),%ecx
  77:	02 18                	add    (%rax),%bl
  79:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
	...
  18:	61                   	(bad)  
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	6e                   	outsb  %ds:(%rsi),(%dx)
   1:	00 00                	add    %al,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 4b 00             	add    %cl,0x0(%rbx)
   8:	00 00                	add    %al,(%rax)
   a:	01 01                	add    %eax,(%rcx)
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	2f                   	(bad)  
  1c:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  21:	62                   	(bad)  
  22:	65 6e                	outsb  %gs:(%rsi),(%dx)
  24:	2f                   	(bad)  
  25:	44 6f                	rex.R outsl %ds:(%rsi),(%dx)
  27:	63 75 6d             	movslq 0x6d(%rbp),%esi
  2a:	65 6e                	outsb  %gs:(%rsi),(%dx)
  2c:	74 73                	je     a1 <add+0x54>
  2e:	2f                   	(bad)  
  2f:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
  31:	6d                   	insl   (%dx),%es:(%rdi)
  32:	70 53                	jo     87 <add+0x3a>
  34:	63 69 50             	movslq 0x50(%rcx),%ebp
  37:	72 6f                	jb     a8 <add+0x5b>
  39:	6a 65                	pushq  $0x65
  3b:	63 74 2f 48          	movslq 0x48(%rdi,%rbp,1),%esi
  3f:	65                   	gs
  40:	6c                   	insb   (%dx),%es:(%rdi)
  41:	6c                   	insb   (%dx),%es:(%rdi)
  42:	6f                   	outsl  %ds:(%rsi),(%dx)
  43:	57                   	push   %rdi
  44:	6f                   	outsl  %ds:(%rsi),(%dx)
  45:	72 6c                	jb     b3 <add+0x66>
  47:	64 00 00             	add    %al,%fs:(%rax)
  4a:	6d                   	insl   (%dx),%es:(%rdi)
  4b:	61                   	(bad)  
  4c:	69 6e 2e 63 00 01 00 	imul   $0x10063,0x2e(%rsi),%ebp
  53:	00 00                	add    %al,(%rax)
  55:	00 09                	add    %cl,(%rcx)
  57:	02 00                	add    (%rax),%al
  59:	00 00                	add    %al,(%rax)
  5b:	00 00                	add    %al,(%rax)
  5d:	00 00                	add    %al,(%rax)
  5f:	00 19                	add    %bl,(%rcx)
  61:	83 a0 75 75 08 21 08 	andl   $0x8,0x21087575(%rax)
  68:	3e                   	ds
  69:	59                   	pop    %rcx
  6a:	31 9f 83 02 02 00    	xor    %ebx,0x20283(%rdi)
  70:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%rdi)
   1:	6f                   	outsl  %ds:(%rsi),(%dx)
   2:	6e                   	outsb  %ds:(%rsi),(%dx)
   3:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
   8:	67 20 69 6e          	and    %ch,0x6e(%ecx)
   c:	74 00                	je     e <.debug_str+0xe>
   e:	75 6e                	jne    7e <.debug_str+0x7e>
  10:	73 69                	jae    7b <.debug_str+0x7b>
  12:	67 6e                	outsb  %ds:(%esi),(%dx)
  14:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  19:	74 00                	je     1b <.debug_str+0x1b>
  1b:	2f                   	(bad)  
  1c:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  21:	62                   	(bad)  
  22:	65 6e                	outsb  %gs:(%rsi),(%dx)
  24:	2f                   	(bad)  
  25:	44 6f                	rex.R outsl %ds:(%rsi),(%dx)
  27:	63 75 6d             	movslq 0x6d(%rbp),%esi
  2a:	65 6e                	outsb  %gs:(%rsi),(%dx)
  2c:	74 73                	je     a1 <.debug_str+0xa1>
  2e:	2f                   	(bad)  
  2f:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
  31:	6d                   	insl   (%dx),%es:(%rdi)
  32:	70 53                	jo     87 <.debug_str+0x87>
  34:	63 69 50             	movslq 0x50(%rcx),%ebp
  37:	72 6f                	jb     a8 <.debug_str+0xa8>
  39:	6a 65                	pushq  $0x65
  3b:	63 74 2f 48          	movslq 0x48(%rdi,%rbp,1),%esi
  3f:	65                   	gs
  40:	6c                   	insb   (%dx),%es:(%rdi)
  41:	6c                   	insb   (%dx),%es:(%rdi)
  42:	6f                   	outsl  %ds:(%rsi),(%dx)
  43:	57                   	push   %rdi
  44:	6f                   	outsl  %ds:(%rsi),(%dx)
  45:	72 6c                	jb     b3 <.debug_str+0xb3>
  47:	64                   	fs
  48:	2f                   	(bad)  
  49:	6d                   	insl   (%dx),%es:(%rdi)
  4a:	61                   	(bad)  
  4b:	69 6e 2e 63 00 6c 6f 	imul   $0x6f6c0063,0x2e(%rsi),%ebp
  52:	6e                   	outsb  %ds:(%rsi),(%dx)
  53:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  57:	73 69                	jae    c2 <.debug_str+0xc2>
  59:	67 6e                	outsb  %ds:(%esi),(%dx)
  5b:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  60:	74 00                	je     62 <.debug_str+0x62>
  62:	6c                   	insb   (%dx),%es:(%rdi)
  63:	6f                   	outsl  %ds:(%rsi),(%dx)
  64:	6e                   	outsb  %ds:(%rsi),(%dx)
  65:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
  6a:	67 20 75 6e          	and    %dh,0x6e(%ebp)
  6e:	73 69                	jae    d9 <.debug_str+0xd9>
  70:	67 6e                	outsb  %ds:(%esi),(%dx)
  72:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  77:	74 00                	je     79 <.debug_str+0x79>
  79:	2f                   	(bad)  
  7a:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  7f:	62                   	(bad)  
  80:	65 6e                	outsb  %gs:(%rsi),(%dx)
  82:	2f                   	(bad)  
  83:	44 6f                	rex.R outsl %ds:(%rsi),(%dx)
  85:	63 75 6d             	movslq 0x6d(%rbp),%esi
  88:	65 6e                	outsb  %gs:(%rsi),(%dx)
  8a:	74 73                	je     ff <.debug_str+0xff>
  8c:	2f                   	(bad)  
  8d:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
  8f:	6d                   	insl   (%dx),%es:(%rdi)
  90:	70 53                	jo     e5 <.debug_str+0xe5>
  92:	63 69 50             	movslq 0x50(%rcx),%ebp
  95:	72 6f                	jb     106 <.debug_str+0x106>
  97:	6a 65                	pushq  $0x65
  99:	63 74 2f 48          	movslq 0x48(%rdi,%rbp,1),%esi
  9d:	65                   	gs
  9e:	6c                   	insb   (%dx),%es:(%rdi)
  9f:	6c                   	insb   (%dx),%es:(%rdi)
  a0:	6f                   	outsl  %ds:(%rsi),(%dx)
  a1:	57                   	push   %rdi
  a2:	6f                   	outsl  %ds:(%rsi),(%dx)
  a3:	72 6c                	jb     111 <.debug_str+0x111>
  a5:	64 00 47 4e          	add    %al,%fs:0x4e(%rdi)
  a9:	55                   	push   %rbp
  aa:	20 43 20             	and    %al,0x20(%rbx)
  ad:	34 2e                	xor    $0x2e,%al
  af:	38 2e                	cmp    %ch,(%rsi)
  b1:	34 20                	xor    $0x20,%al
  b3:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  b8:	65                   	gs
  b9:	3d 67 65 6e 65       	cmp    $0x656e6567,%eax
  be:	72 69                	jb     129 <.debug_str+0x129>
  c0:	63 20                	movslq (%rax),%esp
  c2:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  c7:	68 3d 78 38 36       	pushq  $0x3638783d
  cc:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  d1:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 6174743e <add+0x617473f1>
  d8:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  db:	70 72                	jo     14f <add+0x102>
  dd:	6f                   	outsl  %ds:(%rsi),(%dx)
  de:	74 65                	je     145 <add+0xf8>
  e0:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
  e4:	00 75 6e             	add    %dh,0x6e(%rbp)
  e7:	73 69                	jae    152 <add+0x105>
  e9:	67 6e                	outsb  %ds:(%esi),(%dx)
  eb:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
  f0:	61                   	(bad)  
  f1:	72 00                	jb     f3 <.debug_str+0xf3>
  f3:	63 68 61             	movslq 0x61(%rax),%ebp
  f6:	72 00                	jb     f8 <.debug_str+0xf8>
  f8:	6c                   	insb   (%dx),%es:(%rdi)
  f9:	6f                   	outsl  %ds:(%rsi),(%dx)
  fa:	6e                   	outsb  %ds:(%rsi),(%dx)
  fb:	67 20 69 6e          	and    %ch,0x6e(%ecx)
  ff:	74 00                	je     101 <.debug_str+0x101>
 101:	73 68                	jae    16b <add+0x11e>
 103:	6f                   	outsl  %ds:(%rsi),(%dx)
 104:	72 74                	jb     17a <add+0x12d>
 106:	20 75 6e             	and    %dh,0x6e(%rbp)
 109:	73 69                	jae    174 <add+0x127>
 10b:	67 6e                	outsb  %ds:(%esi),(%dx)
 10d:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
 112:	74 00                	je     114 <.debug_str+0x114>
 114:	73 69                	jae    17f <add+0x132>
 116:	67 6e                	outsb  %ds:(%esi),(%dx)
 118:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
 11d:	61                   	(bad)  
 11e:	72 00                	jb     120 <.debug_str+0x120>
 120:	6d                   	insl   (%dx),%es:(%rdi)
 121:	61                   	(bad)  
 122:	69 6e 00 73 68 6f 72 	imul   $0x726f6873,0x0(%rsi),%ebp
 129:	74 20                	je     14b <add+0xfe>
 12b:	69 6e 74 00 73 69 7a 	imul   $0x7a697300,0x74(%rsi),%ebp
 132:	65                   	gs
 133:	74 79                	je     1ae <add+0x161>
 135:	70 65                	jo     19c <add+0x14f>
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 55 62             	sub    %dl,0x62(%rbp)
   9:	75 6e                	jne    79 <add+0x2c>
   b:	74 75                	je     82 <add+0x35>
   d:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  10:	38 2e                	cmp    %ch,(%rsi)
  12:	34 2d                	xor    $0x2d,%al
  14:	32 75 62             	xor    0x62(%rbp),%dh
  17:	75 6e                	jne    87 <add+0x3a>
  19:	74 75                	je     90 <add+0x43>
  1b:	31 7e 31             	xor    %edi,0x31(%rsi)
  1e:	34 2e                	xor    $0x2e,%al
  20:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  23:	33 29                	xor    (%rcx),%ebp
  25:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  28:	38 2e                	cmp    %ch,(%rsi)
  2a:	34 00                	xor    $0x0,%al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	4d 00 00             	rex.WRB add %r8b,(%r8)
  27:	00 00                	add    %al,(%rax)
  29:	41 0e                	rex.B (bad) 
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	02 48 0c             	add    0xc(%rax),%cl
  34:	07                   	(bad)  
  35:	08 00                	or     %al,(%rax)
  37:	00 1c 00             	add    %bl,(%rax,%rax,1)
  3a:	00 00                	add    %al,(%rax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	14 00                	adc    $0x0,%al
  46:	00 00                	add    %al,(%rax)
  48:	00 41 0e             	add    %al,0xe(%rcx)
  4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  51:	4f 0c 07             	rex.WRXB or $0x7,%al
  54:	08 00                	or     %al,(%rax)
	...
