Input filename:		object_files/BranchTest/main
Output filename:		object_files/BranchTest/results_for_main_nop_skip.txt
Architecture:		x86
Compiler:		gcc
Total instructions:	116
Nops skipped:		7

Generated at 2017/02/21 16:21:53

------------------------------------------------------------------------------------------------------------------------

Opcode types
	0 transfer
	1 arithmetic
	2 logic
	3 misc
	4 jump

Total unique opcodes 500
Total actual opcodes by type
	0 transfer   100
	1 arithmetic 100
	2 logic      100
	3 misc       100
	4 jump       100

Operand types
	0 imm
	1 reg
	2 [reg]
	3 [imm]
	4 [reg + imm]
	5 [reg*scale]
	6 [reg + reg*scale]
	7 [reg*scale + imm]
	8 [reg + reg*scale + imm]

Data directions
	0 no operands
	1 imm
	2 reg
	3 mem
	4 imm -> reg
	5 imm -> mem
	6 reg -> reg
	7 reg -> mem
	8 mem -> reg
	9 mem -> mem

Total opcodes: 116
Counts
	0 transfer   = 58
	1 arithmetic = 21
	2 logic      = 3
	3 misc       = 4
	4 jump       = 30

Percentages
	0 transfer   = 50.000%
	1 arithmetic = 18.103%
	2 logic      =  2.586%
	3 misc       =  3.448%
	4 jump       = 25.862%

Total unique opcodes: 35
Counts
	0 transfer   = {
				Opcode(opcode = 0x58, name = pop, type = transfer)	 = 13,
				Opcode(opcode = 0x89, name = mov, type = transfer)	 = 15,
				Opcode(opcode = 0x50, name = push, type = transfer)	 = 13,
				Opcode(opcode = 0xc6, extension = 0x0, name = mov, type = transfer)	 = 1,
				Opcode(opcode = 0xb8, name = mov, type = transfer)	 = 12,
				Opcode(opcode = 0xc7, extension = 0x0, name = mov, type = transfer)	 = 4,
			}
	1 arithmetic = {
				Opcode(opcode = 0xc1, extension = 0x7, name = sar, type = arithmetic)	 = 2,
				Opcode(opcode = 0x29, name = sub, type = arithmetic)	 = 1,
				Opcode(opcode = 0x2d, name = sub, type = arithmetic)	 = 2,
				Opcode(opcode = 0x83, extension = 0x7, name = cmp, type = arithmetic)	 = 3,
				Opcode(opcode = 0x1, name = add, type = arithmetic)	 = 1,
				Opcode(opcode = 0x83, extension = 0x4, name = and, type = arithmetic)	 = 1,
				Opcode(opcode = 0xd1, extension = 0x7, name = sar, type = arithmetic)	 = 1,
				Opcode(opcode = 0x85, name = test, type = arithmetic)	 = 4,
				Opcode(opcode = 0x39, name = cmp, type = arithmetic)	 = 1,
				Opcode(opcode = 0x80, extension = 0x7, name = cmp, type = arithmetic)	 = 1,
				Opcode(opcode = 0x83, extension = 0x5, name = sub, type = arithmetic)	 = 2,
				Opcode(opcode = 0x83, extension = 0x0, name = add, type = arithmetic)	 = 2,
			}
	2 logic      = {
				Opcode(opcode = 0x31, name = xor, type = logic)	 = 2,
				Opcode(opcode = 0xc1, extension = 0x5, name = shr, type = logic)	 = 1,
			}
	3 misc       = {
				Opcode(opcode = 0xf4, name = hlt, type = misc)	 = 1,
				Opcode(opcode = 0x8d, name = lea, type = misc)	 = 2,
				Opcode(opcode = 0xf1f, extension = 0x0, name = nop, type = misc)	 = 1,
			}
	4 jump       = {
				Opcode(opcode = 0xc3, name = ret, type = jump)	 = 4,
				Opcode(opcode = 0x75, name = jne, type = jump)	 = 3,
				Opcode(opcode = 0xc9, name = leave, type = jump)	 = 1,
				Opcode(opcode = 0xc3, name = rep ret, type = jump)	 = 2,
				Opcode(opcode = 0x77, name = ja, type = jump)	 = 1,
				Opcode(opcode = 0xe9, name = jmp, type = jump)	 = 2,
				Opcode(opcode = 0x74, name = je, type = jump)	 = 5,
				Opcode(opcode = 0xff, extension = 0x2, name = call, type = jump)	 = 2,
				Opcode(opcode = 0xe8, name = call, type = jump)	 = 6,
				Opcode(opcode = 0xeb, name = jmp, type = jump)	 = 1,
				Opcode(opcode = 0xff, extension = 0x4, name = jmp, type = jump)	 = 2,
				Opcode(opcode = 0x7f, name = jg, type = jump)	 = 1,
			}

Total unique opcodes compared to actual opcodes
	0 transfer   = (100, 6)
	1 arithmetic = (100, 12)
	2 logic      = (100, 2)
	3 misc       = (100, 3)
	4 jump       = (100, 12)

Total operands: 166
Counts
	0 imm                     = 51
	1 reg                     = 106
	2 [reg]                   = 0
	3 [imm]                   = 0
	4 [reg + imm]             = 7
	5 [reg*scale]             = 0
	6 [reg + reg*scale]       = 1
	7 [reg*scale + imm]       = 0
	8 [reg + reg*scale + imm] = 1

Percentages
	0 imm                     = 30.723%
	1 reg                     = 63.855%
	2 [reg]                   =  0.000%
	3 [imm]                   =  0.000%
	4 [reg + imm]             =  4.217%
	5 [reg*scale]             =  0.000%
	6 [reg + reg*scale]       =  0.602%
	7 [reg*scale + imm]       =  0.000%
	8 [reg + reg*scale + imm] =  0.602%

Operand types by opcode types
           | imm | reg | [reg] | [imm] | [reg + imm] | [reg*scale] | [reg + reg*scale] | [reg*scale + imm] | [reg + reg*scale + imm] | Total
-----------+-----+-----+-------+-------+-------------+-------------+-------------------+-------------------+-------------------------+------
transfer   | 17  | 71  | 0     | 0     | 2           | 0           | 0                 | 0                 | 0                       | 90   
-----------+-----+-----+-------+-------+-------------+-------------+-------------------+-------------------+-------------------------+------
arithmetic | 14  | 25  | 0     | 0     | 3           | 0           | 0                 | 0                 | 0                       | 42   
-----------+-----+-----+-------+-------+-------------+-------------+-------------------+-------------------+-------------------------+------
logic      | 1   | 5   | 0     | 0     | 0           | 0           | 0                 | 0                 | 0                       | 6    
-----------+-----+-----+-------+-------+-------------+-------------+-------------------+-------------------+-------------------------+------
misc       | 0   | 2   | 0     | 0     | 2           | 0           | 0                 | 0                 | 1                       | 5    
-----------+-----+-----+-------+-------+-------------+-------------+-------------------+-------------------+-------------------------+------
jump       | 19  | 3   | 0     | 0     | 0           | 0           | 1                 | 0                 | 0                       | 23   
-----------+-----+-----+-------+-------+-------------+-------------+-------------------+-------------------+-------------------------+------
Total      | 51  | 106 | 0     | 0     | 7           | 0           | 1                 | 0                 | 1                       | 166  

Operand types by opcode types as percentage of total operands
           | imm     | reg     | [reg]   | [imm]   | [reg + imm] | [reg*scale] | [reg + reg*scale] | [reg*scale + imm] | [reg + reg*scale + imm] | Total   
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
transfer   | 10.241% | 42.771% |  0.000% |  0.000% |  1.205%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                 | 54.217% 
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
arithmetic |  8.434% | 15.060% |  0.000% |  0.000% |  1.807%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                 | 25.301% 
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
logic      |  0.602% |  3.012% |  0.000% |  0.000% |  0.000%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                 |  3.614% 
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
misc       |  0.000% |  1.205% |  0.000% |  0.000% |  1.205%     |  0.000%     |  0.000%           |  0.000%           |  0.602%                 |  3.012% 
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
jump       | 11.446% |  1.807% |  0.000% |  0.000% |  0.000%     |  0.000%     |  0.602%           |  0.000%           |  0.000%                 | 13.855% 
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
Total      | 30.723% | 63.855% |  0.000% |  0.000% |  4.217%     |  0.000%     |  0.602%           |  0.000%           |  0.602%                 | 100.000%

Operand types by opcode types as percentage of operand type
           | imm      | reg      | [reg]   | [imm]   | [reg + imm] | [reg*scale] | [reg + reg*scale] | [reg*scale + imm] | [reg + reg*scale + imm]
-----------+----------+----------+---------+---------+-------------+-------------+-------------------+-------------------+------------------------
transfer   | 33.333%  | 66.981%  |  0.000% |  0.000% | 28.571%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                
-----------+----------+----------+---------+---------+-------------+-------------+-------------------+-------------------+------------------------
arithmetic | 27.451%  | 23.585%  |  0.000% |  0.000% | 42.857%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                
-----------+----------+----------+---------+---------+-------------+-------------+-------------------+-------------------+------------------------
logic      |  1.961%  |  4.717%  |  0.000% |  0.000% |  0.000%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                
-----------+----------+----------+---------+---------+-------------+-------------+-------------------+-------------------+------------------------
misc       |  0.000%  |  1.887%  |  0.000% |  0.000% | 28.571%     |  0.000%     |  0.000%           |  0.000%           | 100.000%               
-----------+----------+----------+---------+---------+-------------+-------------+-------------------+-------------------+------------------------
jump       | 37.255%  |  2.830%  |  0.000% |  0.000% |  0.000%     |  0.000%     | 100.000%          |  0.000%           |  0.000%                
-----------+----------+----------+---------+---------+-------------+-------------+-------------------+-------------------+------------------------
Total      | 100.000% | 100.000% |  0.000% |  0.000% | 100.000%    |  0.000%     | 100.000%          |  0.000%           | 100.000%               

Operand types by opcode types as percentage of opcode type
           | imm     | reg     | [reg]   | [imm]   | [reg + imm] | [reg*scale] | [reg + reg*scale] | [reg*scale + imm] | [reg + reg*scale + imm] | Total   
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
transfer   | 18.889% | 78.889% |  0.000% |  0.000% |  2.222%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                 | 100.000%
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
arithmetic | 33.333% | 59.524% |  0.000% |  0.000% |  7.143%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                 | 100.000%
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
logic      | 16.667% | 83.333% |  0.000% |  0.000% |  0.000%     |  0.000%     |  0.000%           |  0.000%           |  0.000%                 | 100.000%
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
misc       |  0.000% | 40.000% |  0.000% |  0.000% | 40.000%     |  0.000%     |  0.000%           |  0.000%           | 20.000%                 | 100.000%
-----------+---------+---------+---------+---------+-------------+-------------+-------------------+-------------------+-------------------------+---------
jump       | 82.609% | 13.043% |  0.000% |  0.000% |  0.000%     |  0.000%     |  4.348%           |  0.000%           |  0.000%                 | 100.000%

Data direction by opcode type
           | no operands | imm | reg | mem | imm -> reg | imm -> mem | reg -> reg | reg -> mem | mem -> reg | mem -> mem | Total
-----------+-------------+-----+-----+-----+------------+------------+------------+------------+------------+------------+------
transfer   | 0           | 0   | 26  | 0   | 15         | 2          | 15         | 0          | 0          | 0          | 58   
-----------+-------------+-----+-----+-----+------------+------------+------------+------------+------------+------------+------
arithmetic | 0           | 0   | 0   | 0   | 11         | 3          | 7          | 0          | 0          | 0          | 21   
-----------+-------------+-----+-----+-----+------------+------------+------------+------------+------------+------------+------
logic      | 0           | 0   | 0   | 0   | 1          | 0          | 2          | 0          | 0          | 0          | 3    
-----------+-------------+-----+-----+-----+------------+------------+------------+------------+------------+------------+------
misc       | 1           | 0   | 0   | 1   | 0          | 0          | 0          | 0          | 2          | 0          | 4    
-----------+-------------+-----+-----+-----+------------+------------+------------+------------+------------+------------+------
jump       | 7           | 19  | 3   | 1   | 0          | 0          | 0          | 0          | 0          | 0          | 30   
-----------+-------------+-----+-----+-----+------------+------------+------------+------------+------------+------------+------
Total      | 8           | 19  | 29  | 2   | 27         | 5          | 24         | 0          | 2          | 0          | 116  
